
bare_metal.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000198  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000258  08000258  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000258  08000258  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  08000258  08000258  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000258  08000258  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000258  08000258  00010258  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800025c  0800025c  0001025c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  08000260  00020000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000004  08000264  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000024  08000264  00020024  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001062  00000000  00000000  0002002c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000006b2  00000000  00000000  0002108e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000180  00000000  00000000  00021740  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000168  00000000  00000000  000218c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00017b27  00000000  00000000  00021a28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002169  00000000  00000000  0003954f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008a794  00000000  00000000  0003b6b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000c5e4c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000002d0  00000000  00000000  000c5e9c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_loc    00000212  00000000  00000000  000c616c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000004 	.word	0x20000004
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08000240 	.word	0x08000240

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000008 	.word	0x20000008
 8000104:	08000240 	.word	0x08000240

08000108 <main>:
  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  //MX_GPIO_Init();
  /* USER CODE BEGIN 2 */
	RCC_CR2 |= (1<<16);
 8000108:	2280      	movs	r2, #128	; 0x80
 800010a:	4b14      	ldr	r3, [pc, #80]	; (800015c <main+0x54>)
 800010c:	0252      	lsls	r2, r2, #9
 800010e:	6819      	ldr	r1, [r3, #0]
 8000110:	430a      	orrs	r2, r1
 8000112:	601a      	str	r2, [r3, #0]
	while((RCC_CR2&(131072)) != 131072);
 8000114:	2280      	movs	r2, #128	; 0x80
 8000116:	0292      	lsls	r2, r2, #10
 8000118:	6819      	ldr	r1, [r3, #0]
 800011a:	4211      	tst	r1, r2
 800011c:	d0fc      	beq.n	8000118 <main+0x10>
	RCC_CFGR |= 3;
 800011e:	2303      	movs	r3, #3
 8000120:	4a0f      	ldr	r2, [pc, #60]	; (8000160 <main+0x58>)
 8000122:	6811      	ldr	r1, [r2, #0]
 8000124:	430b      	orrs	r3, r1
	while((RCC_CFGR&12) != 12);
 8000126:	210c      	movs	r1, #12
	RCC_CFGR |= 3;
 8000128:	6013      	str	r3, [r2, #0]
	while((RCC_CFGR&12) != 12);
 800012a:	6813      	ldr	r3, [r2, #0]
 800012c:	400b      	ands	r3, r1
 800012e:	2b0c      	cmp	r3, #12
 8000130:	d1fb      	bne.n	800012a <main+0x22>
	RCC_AHBENR |= (1 << 17) | (1 << 19);
 8000132:	23a0      	movs	r3, #160	; 0xa0
 8000134:	4a0b      	ldr	r2, [pc, #44]	; (8000164 <main+0x5c>)
 8000136:	031b      	lsls	r3, r3, #12
 8000138:	6811      	ldr	r1, [r2, #0]
 800013a:	430b      	orrs	r3, r1
 800013c:	6013      	str	r3, [r2, #0]

	GPIOA_OSPEEDR = 1;
 800013e:	2201      	movs	r2, #1
 8000140:	4b09      	ldr	r3, [pc, #36]	; (8000168 <main+0x60>)
 8000142:	601a      	str	r2, [r3, #0]

	GPIOC_MODER = (1 << 12);
 8000144:	2280      	movs	r2, #128	; 0x80
 8000146:	4b09      	ldr	r3, [pc, #36]	; (800016c <main+0x64>)
 8000148:	0152      	lsls	r2, r2, #5
 800014a:	601a      	str	r2, [r3, #0]
	  else if(!(port_val&0x40)) temp = 7;
	  else if(!(port_val&0x80)) temp = 8;
	  else temp = 0;
	  GPIOC->ODR = temp<<6;*/

		  GPIOC_ODR = ((GPIOA_IDRu.bits.B0)<<6);
 800014c:	4b08      	ldr	r3, [pc, #32]	; (8000170 <main+0x68>)
 800014e:	4a09      	ldr	r2, [pc, #36]	; (8000174 <main+0x6c>)
 8000150:	781b      	ldrb	r3, [r3, #0]
 8000152:	07db      	lsls	r3, r3, #31
 8000154:	0e5b      	lsrs	r3, r3, #25
 8000156:	6013      	str	r3, [r2, #0]
  while (1)
 8000158:	e7fd      	b.n	8000156 <main+0x4e>
 800015a:	46c0      	nop			; (mov r8, r8)
 800015c:	40021034 	.word	0x40021034
 8000160:	40021004 	.word	0x40021004
 8000164:	40021014 	.word	0x40021014
 8000168:	48000008 	.word	0x48000008
 800016c:	48000800 	.word	0x48000800
 8000170:	48000010 	.word	0x48000010
 8000174:	48000814 	.word	0x48000814

08000178 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000178:	e7fe      	b.n	8000178 <NMI_Handler>

0800017a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800017a:	e7fe      	b.n	800017a <HardFault_Handler>

0800017c <SVC_Handler>:

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 800017c:	4770      	bx	lr

0800017e <PendSV_Handler>:
 800017e:	4770      	bx	lr

08000180 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000180:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000182:	f000 f82d 	bl	80001e0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000186:	bd10      	pop	{r4, pc}

08000188 <SystemInit>:
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8000188:	4770      	bx	lr
	...

0800018c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800018c:	480d      	ldr	r0, [pc, #52]	; (80001c4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800018e:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000190:	480d      	ldr	r0, [pc, #52]	; (80001c8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000192:	490e      	ldr	r1, [pc, #56]	; (80001cc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000194:	4a0e      	ldr	r2, [pc, #56]	; (80001d0 <LoopForever+0xe>)
  movs r3, #0
 8000196:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000198:	e002      	b.n	80001a0 <LoopCopyDataInit>

0800019a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800019a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800019c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800019e:	3304      	adds	r3, #4

080001a0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001a0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001a2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001a4:	d3f9      	bcc.n	800019a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001a6:	4a0b      	ldr	r2, [pc, #44]	; (80001d4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80001a8:	4c0b      	ldr	r4, [pc, #44]	; (80001d8 <LoopForever+0x16>)
  movs r3, #0
 80001aa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001ac:	e001      	b.n	80001b2 <LoopFillZerobss>

080001ae <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001ae:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001b0:	3204      	adds	r2, #4

080001b2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001b2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001b4:	d3fb      	bcc.n	80001ae <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80001b6:	f7ff ffe7 	bl	8000188 <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 80001ba:	f000 f81d 	bl	80001f8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80001be:	f7ff ffa3 	bl	8000108 <main>

080001c2 <LoopForever>:

LoopForever:
    b LoopForever
 80001c2:	e7fe      	b.n	80001c2 <LoopForever>
  ldr   r0, =_estack
 80001c4:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 80001c8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80001cc:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 80001d0:	08000260 	.word	0x08000260
  ldr r2, =_sbss
 80001d4:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 80001d8:	20000024 	.word	0x20000024

080001dc <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80001dc:	e7fe      	b.n	80001dc <ADC1_COMP_IRQHandler>
	...

080001e0 <HAL_IncTick>:
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80001e0:	4a03      	ldr	r2, [pc, #12]	; (80001f0 <HAL_IncTick+0x10>)
 80001e2:	4b04      	ldr	r3, [pc, #16]	; (80001f4 <HAL_IncTick+0x14>)
 80001e4:	6811      	ldr	r1, [r2, #0]
 80001e6:	781b      	ldrb	r3, [r3, #0]
 80001e8:	185b      	adds	r3, r3, r1
 80001ea:	6013      	str	r3, [r2, #0]
}
 80001ec:	4770      	bx	lr
 80001ee:	46c0      	nop			; (mov r8, r8)
 80001f0:	20000020 	.word	0x20000020
 80001f4:	20000000 	.word	0x20000000

080001f8 <__libc_init_array>:
 80001f8:	b570      	push	{r4, r5, r6, lr}
 80001fa:	2600      	movs	r6, #0
 80001fc:	4d0c      	ldr	r5, [pc, #48]	; (8000230 <__libc_init_array+0x38>)
 80001fe:	4c0d      	ldr	r4, [pc, #52]	; (8000234 <__libc_init_array+0x3c>)
 8000200:	1b64      	subs	r4, r4, r5
 8000202:	10a4      	asrs	r4, r4, #2
 8000204:	42a6      	cmp	r6, r4
 8000206:	d109      	bne.n	800021c <__libc_init_array+0x24>
 8000208:	2600      	movs	r6, #0
 800020a:	f000 f819 	bl	8000240 <_init>
 800020e:	4d0a      	ldr	r5, [pc, #40]	; (8000238 <__libc_init_array+0x40>)
 8000210:	4c0a      	ldr	r4, [pc, #40]	; (800023c <__libc_init_array+0x44>)
 8000212:	1b64      	subs	r4, r4, r5
 8000214:	10a4      	asrs	r4, r4, #2
 8000216:	42a6      	cmp	r6, r4
 8000218:	d105      	bne.n	8000226 <__libc_init_array+0x2e>
 800021a:	bd70      	pop	{r4, r5, r6, pc}
 800021c:	00b3      	lsls	r3, r6, #2
 800021e:	58eb      	ldr	r3, [r5, r3]
 8000220:	4798      	blx	r3
 8000222:	3601      	adds	r6, #1
 8000224:	e7ee      	b.n	8000204 <__libc_init_array+0xc>
 8000226:	00b3      	lsls	r3, r6, #2
 8000228:	58eb      	ldr	r3, [r5, r3]
 800022a:	4798      	blx	r3
 800022c:	3601      	adds	r6, #1
 800022e:	e7f2      	b.n	8000216 <__libc_init_array+0x1e>
 8000230:	08000258 	.word	0x08000258
 8000234:	08000258 	.word	0x08000258
 8000238:	08000258 	.word	0x08000258
 800023c:	0800025c 	.word	0x0800025c

08000240 <_init>:
 8000240:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000242:	46c0      	nop			; (mov r8, r8)
 8000244:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000246:	bc08      	pop	{r3}
 8000248:	469e      	mov	lr, r3
 800024a:	4770      	bx	lr

0800024c <_fini>:
 800024c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800024e:	46c0      	nop			; (mov r8, r8)
 8000250:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000252:	bc08      	pop	{r3}
 8000254:	469e      	mov	lr, r3
 8000256:	4770      	bx	lr
